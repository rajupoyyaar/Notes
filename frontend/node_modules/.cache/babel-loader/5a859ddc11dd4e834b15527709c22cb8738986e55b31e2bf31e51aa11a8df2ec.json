{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import axios from'axios';const API_URL=process.env.REACT_APP_API_URL;console.log(\"api url\",API_URL);// Async Thunks\nexport const loginUser=createAsyncThunk('user/login',async(_ref,thunkAPI)=>{let{email,password}=_ref;try{const config={headers:{'Content-type':'application/json'}};const{data}=await axios.post(\"\".concat(API_URL,\"/login\"),{email,password},config);console.log(data);localStorage.setItem('userInfo',JSON.stringify(data));return data;}catch(error){return thunkAPI.rejectWithValue(error.response.data.message);}});export const registerUser=createAsyncThunk('user/register',async(_ref2,thunkAPI)=>{let{name,email,password,profile}=_ref2;try{const config={headers:{'Content-type':'application/json'}};const{data}=await axios.post(\"\".concat(API_URL),{name,email,password,profile},config);localStorage.setItem('userInfo',JSON.stringify(data));return data;}catch(error){return thunkAPI.rejectWithValue(error.response.data.message);}});export const updateProfile=createAsyncThunk('user/updateProfile',async(_ref3,thunkAPI)=>{let{name,email,password,profile}=_ref3;try{const token=thunkAPI.getState().user.userInfo.token;const config={headers:{Authorization:\"Bearer \".concat(token)}};const{data}=await axios.post(\"\".concat(API_URL),{name,email,password,profile},config);localStorage.setItem('userInfo',JSON.stringify(data));// Update local storage\nconsole.log(data);return data;}catch(error){var _error$response,_error$response$data;return thunkAPI.rejectWithValue(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Profile update failed');}});// User Slice\nconst userSlice=createSlice({name:'user',initialState:{userInfo:null,loading:false,error:null},reducers:{logoutUser:state=>{state.userInfo=null;localStorage.removeItem('userInfo');}},extraReducers:builder=>{builder// Login\n.addCase(loginUser.pending,state=>{state.loading=true;state.error=null;}).addCase(loginUser.fulfilled,(state,action)=>{state.loading=false;state.userInfo=action.payload;}).addCase(loginUser.rejected,(state,action)=>{state.loading=false;state.error=action.payload;})// Register\n.addCase(registerUser.pending,state=>{state.loading=true;state.error=null;}).addCase(registerUser.fulfilled,(state,action)=>{state.loading=false;state.userInfo=action.payload;}).addCase(registerUser.rejected,(state,action)=>{state.loading=false;state.error=action.payload;})//update Profile\n.addCase(updateProfile.pending,state=>{state.loading=true;state.error=null;}).addCase(updateProfile.fulfilled,(state,action)=>{state.loading=false;state.userInfo=action.payload;}).addCase(updateProfile.rejected,(state,action)=>{state.loading=false;state.error=action.payload;});}});export const{logoutUser}=userSlice.actions;export default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_URL","process","env","REACT_APP_API_URL","console","log","loginUser","_ref","thunkAPI","email","password","config","headers","data","post","concat","localStorage","setItem","JSON","stringify","error","rejectWithValue","response","message","registerUser","_ref2","name","profile","updateProfile","_ref3","token","getState","user","userInfo","Authorization","_error$response","_error$response$data","userSlice","initialState","loading","reducers","logoutUser","state","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/rajupoyyaar/Documents/NotesApp/frontend/src/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL;\n\nconsole.log(\"api url\", API_URL)\n\n// Async Thunks\nexport const loginUser = createAsyncThunk(\n    'user/login',\n    async ({ email, password }, thunkAPI) => {\n        try {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                },\n            };\n            const { data } = await axios.post(`${API_URL}/login`, { email, password }, config);\n            console.log(data)\n            localStorage.setItem('userInfo', JSON.stringify(data));\n            return data;\n        } catch (error) {\n            return thunkAPI.rejectWithValue(error.response.data.message);\n        }\n    }\n);\n\nexport const registerUser = createAsyncThunk(\n    'user/register',\n    async ({ name, email, password, profile }, thunkAPI) => {\n        try {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                },\n            };\n            const { data } = await axios.post(`${API_URL}`, { name, email, password, profile }, config);\n            localStorage.setItem('userInfo', JSON.stringify(data));\n            return data;\n        } catch (error) {\n            return thunkAPI.rejectWithValue(error.response.data.message);\n        }\n    }\n);\n\nexport const updateProfile = createAsyncThunk(\n    'user/updateProfile',\n    async ({ name, email, password, profile }, thunkAPI) => {\n        try {\n            const token = thunkAPI.getState().user.userInfo.token;\n            const config = {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            };\n            const { data } = await axios.post(\n                `${API_URL}`,\n                { name, email, password, profile },\n                config\n            );\n            localStorage.setItem('userInfo', JSON.stringify(data)); // Update local storage\n            console.log(data)\n            return data;\n        } catch (error) {\n            return thunkAPI.rejectWithValue(\n                error.response?.data?.message || 'Profile update failed'\n            );\n        }\n    }\n);\n\n\n// User Slice\nconst userSlice = createSlice({\n    name: 'user',\n    initialState: {\n        userInfo: null,\n        loading: false,\n        error: null,\n    },\n    reducers: {\n        logoutUser: (state) => {\n            state.userInfo = null;\n            localStorage.removeItem('userInfo');\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            // Login\n            .addCase(loginUser.pending, (state) => {\n                state.loading = true;\n                state.error = null;\n            })\n            .addCase(loginUser.fulfilled, (state, action) => {\n                state.loading = false;\n                state.userInfo = action.payload;\n            })\n            .addCase(loginUser.rejected, (state, action) => {\n                state.loading = false;\n                state.error = action.payload;\n            })\n            // Register\n            .addCase(registerUser.pending, (state) => {\n                state.loading = true;\n                state.error = null;\n            })\n            .addCase(registerUser.fulfilled, (state, action) => {\n                state.loading = false;\n                state.userInfo = action.payload;\n            })\n            .addCase(registerUser.rejected, (state, action) => {\n                state.loading = false;\n                state.error = action.payload;\n            })\n            //update Profile\n            .addCase(updateProfile.pending, (state) => {\n                state.loading = true;\n                state.error = null;\n            })\n            .addCase(updateProfile.fulfilled, (state, action) => {\n                state.loading = false;\n                state.userInfo = action.payload;\n            })\n            .addCase(updateProfile.rejected, (state, action) => {\n                state.loading = false;\n                state.error = action.payload;\n            });\n    },\n});\n\nexport const { logoutUser } = userSlice.actions;\nexport default userSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}