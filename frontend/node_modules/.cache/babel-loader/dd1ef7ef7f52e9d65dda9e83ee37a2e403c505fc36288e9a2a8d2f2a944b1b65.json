{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Button,Container,Form}from'react-bootstrap';import MainScreen from'../Components/MainScreen';import{useDispatch,useSelector}from'react-redux';import{useParams,useNavigate}from'react-router-dom';import{updateNote,fetchNotes}from'../notesSlice';import Loading from'../Components/Loading';import Error from'../Components/Error';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SingleNote=()=>{const{id}=useParams();// Get the note ID from the URL\nconst navigate=useNavigate();const dispatch=useDispatch();const{notes,loading,error}=useSelector(state=>state.notes);// Find the note in the Redux state\nconst note=notes.find(n=>n._id===id);// State for form fields\nconst[title,setTitle]=useState('');const[content,setContent]=useState('');const[category,setCategory]=useState('');useEffect(()=>{if(!note){dispatch(fetchNotes());}else{setTitle(note.title);setContent(note.content);setCategory(note.category);}},[dispatch,note]);const submitHandler=e=>{e.preventDefault();dispatch(updateNote({id,title,content,category})).then(()=>{navigate('/mynotes');});};return/*#__PURE__*/_jsx(MainScreen,{title:\"Update Note\",children:/*#__PURE__*/_jsxs(Container,{className:\"createnote-container\",children:[loading&&/*#__PURE__*/_jsx(Loading,{}),error&&/*#__PURE__*/_jsx(Error,{variant:\"danger\",children:error}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"title\",className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Title\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter note title\",value:title,onChange:e=>setTitle(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"content\",className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Content\"}),/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",rows:5,placeholder:\"Enter note content\",value:content,onChange:e=>setContent(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"category\",className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Category\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter note category\",value:category,onChange:e=>setCategory(e.target.value),required:true})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Update Note\"})]})]})});};export default SingleNote;","map":{"version":3,"names":["React","useState","useEffect","Button","Container","Form","MainScreen","useDispatch","useSelector","useParams","useNavigate","updateNote","fetchNotes","Loading","Error","jsx","_jsx","jsxs","_jsxs","SingleNote","id","navigate","dispatch","notes","loading","error","state","note","find","n","_id","title","setTitle","content","setContent","category","setCategory","submitHandler","e","preventDefault","then","children","className","variant","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","target","required","as","rows"],"sources":["/Users/rajupoyyaar/Documents/NotesApp/frontend/src/Pages/SingleNote.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Container, Form } from 'react-bootstrap';\nimport MainScreen from '../Components/MainScreen';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { updateNote, fetchNotes } from '../notesSlice';\nimport Loading from '../Components/Loading';\nimport Error from '../Components/Error';\n\nconst SingleNote = () => {\n    const { id } = useParams(); // Get the note ID from the URL\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const { notes, loading, error } = useSelector((state) => state.notes);\n\n    // Find the note in the Redux state\n    const note = notes.find((n) => n._id === id);\n\n    // State for form fields\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('');\n    const [category, setCategory] = useState('');\n\n    useEffect(() => {\n        if (!note) {\n            dispatch(fetchNotes());\n        } else {\n            setTitle(note.title);\n            setContent(note.content);\n            setCategory(note.category);\n        }\n    }, [dispatch, note]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(updateNote({ id, title, content, category })).then(() => {\n            navigate('/mynotes');\n        });\n    };\n\n    return (\n        <MainScreen title=\"Update Note\">\n            <Container className=\"createnote-container\">\n                {loading && <Loading />}\n                {error && <Error variant=\"danger\">{error}</Error>}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId=\"title\" className=\"mb-3\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter note title\"\n                            value={title}\n                            onChange={(e) => setTitle(e.target.value)}\n                            required\n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"content\" className=\"mb-3\">\n                        <Form.Label>Content</Form.Label>\n                        <Form.Control\n                            as=\"textarea\"\n                            rows={5}\n                            placeholder=\"Enter note content\"\n                            value={content}\n                            onChange={(e) => setContent(e.target.value)}\n                            required\n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"category\" className=\"mb-3\">\n                        <Form.Label>Category</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter note category\"\n                            value={category}\n                            onChange={(e) => setCategory(e.target.value)}\n                            required\n                        />\n                    </Form.Group>\n\n                    <Button type=\"submit\" variant=\"primary\">\n                        Update Note\n                    </Button>\n                </Form>\n            </Container>\n        </MainScreen>\n    );\n};\n\nexport default SingleNote;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}