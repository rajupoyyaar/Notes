{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Async Thunks\nexport const loginUser = createAsyncThunk('user/login', async ({\n  email,\n  password\n}, thunkAPI) => {\n  try {\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:5001/login', {\n      email,\n      password\n    }, config);\n    console.log(data);\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data.message);\n  }\n});\nexport const registerUser = createAsyncThunk('user/register', async ({\n  name,\n  email,\n  password,\n  profile\n}, thunkAPI) => {\n  try {\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:5001', {\n      name,\n      email,\n      password,\n      profile\n    }, config);\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data.message);\n  }\n});\nexport const updateProfile = createAsyncThunk('user/updateProfile', async ({\n  name,\n  email,\n  password,\n  profile\n}, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().user.userInfo.token;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put('http://localhost:5001/profile', {\n      name,\n      email,\n      password,\n      profile\n    }, config);\n    localStorage.setItem('userInfo', JSON.stringify(data)); // Update local storage\n    return data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return thunkAPI.rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Profile update failed');\n  }\n});\n\n// User Slice\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    userInfo: null,\n    loading: false,\n    error: null\n  },\n  reducers: {\n    logoutUser: state => {\n      state.userInfo = null;\n      localStorage.removeItem('userInfo');\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login\n    .addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.userInfo = action.payload;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Register\n    .addCase(registerUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.userInfo = action.payload;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    //update Profile\n    .addCase(updateProfile.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(updateProfile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.userInfo = action.payload;\n    }).addCase(updateProfile.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logoutUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","loginUser","email","password","thunkAPI","config","headers","data","post","console","log","localStorage","setItem","JSON","stringify","error","rejectWithValue","response","message","registerUser","name","profile","updateProfile","token","getState","user","userInfo","Authorization","put","_error$response","_error$response$data","userSlice","initialState","loading","reducers","logoutUser","state","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/rajupoyyaar/Documents/NotesApp/frontend/src/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Async Thunks\nexport const loginUser = createAsyncThunk(\n    'user/login',\n    async ({ email, password }, thunkAPI) => {\n        try {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                },\n            };\n            const { data } = await axios.post('http://localhost:5001/login', { email, password }, config);\n            console.log(data)\n            localStorage.setItem('userInfo', JSON.stringify(data));\n            return data;\n        } catch (error) {\n            return thunkAPI.rejectWithValue(error.response.data.message);\n        }\n    }\n);\n\nexport const registerUser = createAsyncThunk(\n    'user/register',\n    async ({ name, email, password, profile }, thunkAPI) => {\n        try {\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                },\n            };\n            const { data } = await axios.post('http://localhost:5001', { name, email, password, profile }, config);\n            localStorage.setItem('userInfo', JSON.stringify(data));\n            return data;\n        } catch (error) {\n            return thunkAPI.rejectWithValue(error.response.data.message);\n        }\n    }\n);\n\nexport const updateProfile = createAsyncThunk(\n    'user/updateProfile',\n    async ({ name, email, password, profile }, thunkAPI) => {\n        try {\n            const token = thunkAPI.getState().user.userInfo.token;\n            const config = {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            };\n            const { data } = await axios.put(\n                'http://localhost:5001/profile',\n                { name, email, password, profile },\n                config\n            );\n            localStorage.setItem('userInfo', JSON.stringify(data)); // Update local storage\n            return data;\n        } catch (error) {\n            return thunkAPI.rejectWithValue(\n                error.response?.data?.message || 'Profile update failed'\n            );\n        }\n    }\n);\n\n\n// User Slice\nconst userSlice = createSlice({\n    name: 'user',\n    initialState: {\n        userInfo: null,\n        loading: false,\n        error: null,\n    },\n    reducers: {\n        logoutUser: (state) => {\n            state.userInfo = null;\n            localStorage.removeItem('userInfo');\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            // Login\n            .addCase(loginUser.pending, (state) => {\n                state.loading = true;\n                state.error = null;\n            })\n            .addCase(loginUser.fulfilled, (state, action) => {\n                state.loading = false;\n                state.userInfo = action.payload;\n            })\n            .addCase(loginUser.rejected, (state, action) => {\n                state.loading = false;\n                state.error = action.payload;\n            })\n            // Register\n            .addCase(registerUser.pending, (state) => {\n                state.loading = true;\n                state.error = null;\n            })\n            .addCase(registerUser.fulfilled, (state, action) => {\n                state.loading = false;\n                state.userInfo = action.payload;\n            })\n            .addCase(registerUser.rejected, (state, action) => {\n                state.loading = false;\n                state.error = action.payload;\n            })\n            //update Profile\n            .addCase(updateProfile.pending, (state) => {\n                state.loading = true;\n                state.error = null;\n            })\n            .addCase(updateProfile.fulfilled, (state, action) => {\n                state.loading = false;\n                state.userInfo = action.payload;\n            })\n            .addCase(updateProfile.rejected, (state, action) => {\n                state.loading = false;\n                state.error = action.payload;\n            });\n    },\n});\n\nexport const { logoutUser } = userSlice.actions;\nexport default userSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}